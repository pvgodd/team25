{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/VideoUploadPage/VideoUploadPage.js","components/views/VideoDetailPage/Sections/SideVideo.js","components/views/VideoDetailPage/Sections/Subscribe.js","components/views/VideoDetailPage/Sections/LikeDislikes.js","components/views/VideoDetailPage/Sections/SingleComment.js","components/views/VideoDetailPage/Sections/ReplyComment.js","components/views/VideoDetailPage/Sections/Comment.js","components/views/VideoDetailPage/VideoDetailPage.js","components/views/SubscriptionPage/SubscriptionPage.js","components/PlacesList.js","components/mapbox.js","components/AddPlaceForm.js","components/Map.js","components/MapApp.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","Title","Typography","Meta","Card","LandingPage","useState","Video","setVideo","Axios","success","console","log","videos","alert","renderCards","map","video","index","minutes","Math","floor","duration","seconds","lg","md","xs","href","_id","style","position","width","alt","src","thumbnail","className","bottom","right","margin","color","backgroundColor","opacity","padding","borderRadius","letterSpacing","fontSize","fontWeight","lineHeight","avatar","writer","image","title","description","name","marginLeft","views","moment","createdAt","format","level","gutter","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","Item","prefix","placeholder","value","onChange","onBlur","border","checked","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","confirmPassword","oneOf","lastname","unix","registerUser","errmsg","label","hasFeedback","validateStatus","onClick","Menu","SubMenu","ItemGroup","LeftMenu","mode","key","userData","status","NavBar","visible","setVisible","zIndex","placement","closable","onClose","Footer","height","display","flexDirection","alignItems","justifyContent","TextArea","Input","PrivateOptions","CategoryOptions","VideoUploadPage","VideoTitle","setVideoTitle","Description","setDescription","Private","setPrivate","Category","setCategory","FilePath","setFilePath","Duration","setDuration","ThumbnailPath","setThumbnailPath","onSumit","e","preventDefault","variables","privacy","filePath","category","message","maxWidth","textAlign","marginBottom","Upload","onDrop","files","formData","FormData","append","header","variable","url","fileName","fileDuration","multiple","maxSize","getRootProps","getInputProps","fonSize","currentTarget","item","size","SideVideo","sideVideos","setsideVideos","renderSideVideo","marginRight","Fragment","marginTop","Subscribe","SubscribeNumber","setSubscribeNumber","Subscribed","setSubscribed","userTo","subscribeNumber","subscribedVariable","userFrom","subscribed","textTransform","LikeDislikes","Likes","setLikes","Dislikes","setDislikes","LikeAction","setLikeAction","DisLikeAction","setDisLikeAction","videoId","commentId","res","likes","length","like","dislikes","dislike","theme","paddingLeft","cursor","SingleComment","OpenReply","setOpenReply","CommentValue","setCommentValue","postId","responseTo","comment","content","result","refreshFunction","actions","author","ReplyComment","parentCommentId","ChildCommentnumber","setChildCommentnumber","OpenReplyComments","setOpenReplyComments","commentNumber","commentLists","Comment","setComment","VideoDetailPage","match","params","VideoDetail","setVideoDetail","CommentLists","setCommentLists","videoDetail","comments","subscribeButton","controls","newComment","concat","SubscriptionPage","Videos","setVideos","subscriptionVariables","PlacesList","places","onPlaceClick","onPlaceRemove","place","accessToken","geocoder","GeocoderService","AddPlaceForm","suggestions","setSuggestions","currentSuggestion","setCurrentSuggestion","text","setText","event","a","query","target","forwardGeocode","limit","send","body","features","geometry","place_name","lngLat","coordinates","autoComplete","onInput","x","suggestion","navStyle","top","left","scaleControlStyle","Map","center","latitude","longitude","zoom","viewport","setViewport","mapboxApiAccessToken","onViewportChange","viewBox","fill","stroke","transform","d","initialPlaces","getPlaces","Promise","resolve","App","isLoading","setLoading","setPlaces","setCenter","filter","find","newPlace","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","MapApp","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba25680b.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React, { useEffect, useState } from 'react'\nimport { FaCode } from \"react-icons/fa\";\nimport { Card, Icon, Avatar, Col, Typography, Row } from 'antd';\nimport Axios from 'axios';\n//import Item from 'antd/lib/list/Item';\nimport moment from 'moment';\nconst { Title } = Typography;\nconst { Meta } = Card;\n\nfunction LandingPage() {\n\n    const [Video, setVideo] = useState([])\n\n\n    //몽고db 영상 가져오기\n    useEffect(() => {\n        Axios.get('/api/video/getVideos')\n            .then(response => {\n                if (response.data.success) {\n                    console.log(response.data)\n                    setVideo(response.data.videos)\n\n                } else {\n                    alert('비디오 몽고db 불러오기 실패!')\n                }\n            })\n    }, [])\n\n    const renderCards = Video.map((video, index) => {\n\n        var minutes = Math.floor(video.duration / 60);\n        var seconds = Math.floor((video.duration - minutes * 60));\n\n        return <Col lg={6} md={8} xs={24}>\n            {/* id를 이용해 비디오 링크 걸어둠 */}\n            <a href={`/video/${video._id}`} >\n                <div style={{ position: 'relative' }}>\n                    <img style={{ width: '100%' }} alt=\"thumbnail\" src={`http://localhost:5000/${video.thumbnail}`} />\n                    <div className=\"duration\"\n                        style={{\n                            bottom: 0, right: 0, position: 'absolute', margin: '4px',\n                            color: '#fff', backgroundColor: 'rgba(17, 17, 17, 0.8)', opacity: 0.8,\n                            padding: '2px 4px', borderRadius: '2px', letterSpacing: '0.5px', fontSize: '12px',\n                            fontWeight: '500', lineHeight: '12px'\n                        }}\n                    >\n                        <span>{minutes} : {seconds}</span>\n                    </div>\n                </div>\n            </a>\n            <br />\n            <Meta\n                avatar={\n                    //Avatar 올린 사람의 이미지\n                    <Avatar src={video.writer.image} />\n                }\n                title={video.title}\n                description=\"\"\n            />\n            <span>{video.writer.name} </span><br />\n            <span style={{ marginLeft: '3rem' }}> {video.views} views</span> - <span> {moment(video.createdAt).format(\"MMM Do YY\")} </span>\n        </Col>\n    })\n    return (\n        <div style={{ width: '85%', margin: '3rem auto' }}>\n            <Title level={2}>Recommend</Title>\n            <hr />\n            <Row gutter={[32, 16]}>\n                {renderCards}\n\n            </Row>\n        </div>\n    )\n}\n\nexport default LandingPage\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from \"react\";\nimport { Menu } from \"antd\";\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n      <Menu.Item key=\"mail\">\n        <a href=\"/\">Home</a>\n      </Menu.Item>\n      <Menu.Item key=\"subscription\">\n        <a href=\"/subscription\">Subscription</a>\n      </Menu.Item>\n      <Menu.Item key=\"MapApp\">\n        <a href=\"/MapApp\">MapApp</a>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default LeftMenu;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"upload\">\n          <a href=\"/video/upload\">Video</a>\n        </Menu.Item>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">Logo</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'\n        }}>\n           <p> Happy Coding  <Icon type=\"smile\" /></p>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, { useState } from \"react\";\n//ant design 사용\nimport { Typography, Button, Form, message, Input, Icon } from 'antd';\n//dropzone 템플릿\nimport DropZone from 'react-dropzone';\nimport Axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { PromiseProvider } from \"mongoose\";\n//import { response } from \"express\";\n\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\n//선택지 값 설정 map 함수 사용하기 위한 것\nconst PrivateOptions = [\n    { value: 0, label: \"Private\" },\n    { value: 1, label: \"Puplic\" }\n]\nconst CategoryOptions = [\n    { value: 0, label: \"Film & Animation\" },\n    { value: 1, label: \"Auto & Vehicles\" },\n    { value: 2, label: \"Music\" },\n    { value: 3, label: \"Pet & Animals\" }\n]\n\nfunction VideoUploadPage(props) {\n    const user = useSelector(state => state.user);\n\n    //state 는 value 값 저장\n    const [VideoTitle, setVideoTitle] = useState(\"\")\n    const [Description, setDescription] = useState(\"\")\n    //0일 경우 첫번째 값\n    const [Private, setPrivate] = useState(0)\n    const [Category, setCategory] = useState(\"Film & Animation\")\n\n    const [FilePath, setFilePath] = useState(\"\")\n    const [Duration, setDuration] = useState(\"\")\n    const [ThumbnailPath, setThumbnailPath] = useState(\"\")\n    //e is event\n    //글을 쓰거나 라벨을 선택 변경했을때 저장해줘서 값 받음?\n    //Tigger 작용 값\n    const onTitleChange = (e) => {\n        setVideoTitle(e.currentTarget.value)\n    }\n    const onDescriptionChange = (e) => {\n        setDescription(e.currentTarget.value)\n    }\n    const onPrivateChange = (e) => {\n        setPrivate(e.currentTarget.value)\n    }\n\n    const onCategoryChange = (e) => {\n        setCategory(e.currentTarget.value)\n    }\n    const onDrop = (files) => {\n        let formData = new FormData;\n        const config = {\n            header: { 'content-type': 'multipart/form-data' }\n        }\n        formData.append(\"file\", files[0])\n        //영상 올리는 부분\n        Axios.post('/api/video/uploadfiles', formData, config)\n            .then(response => {\n                if (response.data.success) {\n\n\n                    let variable = {\n                        url: response.data.url,\n                        fileName: response.data.fileName\n                    }\n\n                    setFilePath(response.data.url)\n                    //썸네일 부분\n                    Axios.post('/api/video/thumbnail', variable)\n                        .then(response => {\n                            if (response.data.success) {\n                                console.log(response.data)\n                                setDuration(response.data.fileDuration)\n                                setThumbnailPath(response.data.url)\n\n\n                            } else {\n                                alert('썸네일 생성 실패')\n                            }\n                        })\n\n                } else {\n                    alert('비디오 업로드 실패')\n                }\n            })\n    }\n    const onSumit = (e) => {\n        //preventDefault 이벤트 방지 쿠션\n        e.preventDefault();\n\n        const variables = {\n            writer: user.userData._id,\n            title: VideoTitle,\n            description: Description,\n            privacy: Private,\n            filePath: FilePath,\n            category: Category,\n            duration: Duration,\n            thumbnail: ThumbnailPath,\n        }\n        //submit\n        Axios.post('/api/video/uploadVideo', variables)\n            .then(response => {\n                if (response.data.success) {\n                    message.success('업로드 submit 성공!')\n\n                    setTimeout(() => {\n                        props.history.push('/')\n                    }, 3000);\n\n                } else {\n                    alert('비디오 submit 실패!')\n                }\n            })\n    }\n\n\n\n    return (\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n                <Title level={2} Upload Video></Title>\n            </div>\n            <Form onSubmit={onSumit}>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <DropZone\n                        onDrop={onDrop}\n                        multiple={false}\n                        maxSize={10000000000}\n                    >\n                        {({ getRootProps, getInputProps }) => (\n                            <div style={{ width: '300px', height: '240px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }} {...getRootProps()}>\n                                <input {...getInputProps()} />\n                                <Icon type=\"plus\" style={{ fonSize: '3rem' }} />\n\n                            </div>\n                        )}\n                    </DropZone>\n\n                    {ThumbnailPath &&\n                        <div>\n                            <img src={`http://localhost:5000/${ThumbnailPath}`} alt=\"thumbnail\" />\n                        </div>\n                    }\n                </div>\n                <br />\n                <br />\n                <label>Title</label>\n                <Input\n                    onChange={onTitleChange}\n                    value={VideoTitle}\n                />\n                <br />\n                <br />\n                <label>Description</label>\n                <TextArea\n                    onChange={onDescriptionChange}\n                    value={Description}\n                />\n                <br />\n                <br />\n                <select onChange={onPrivateChange}>\n                    {PrivateOptions.map((item, index) => (\n                        <option key={index} value={item.value}>{item.label}</option>\n                    ))}\n\n                </select>\n                <br />\n                <br />\n                <select onChange={onCategoryChange}>\n                    {CategoryOptions.map((item, index) => (\n                        <option key={index} value={item.value}>{item.label}</option>\n                    ))}\n                </select>\n                <br />\n                <br />\n                <Button type=\"primary\" size=\"large\" onClick={onSumit}>\n                    Submit\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\n\n{/*다른 곳에서도 이용가능하게 만듦*/ }\nexport default VideoUploadPage","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\n//import { response } from 'express'\r\nfunction SideVideo() {\r\n    const [sideVideos, setsideVideos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.get('/api/video/getVideos').then((response) => {\r\n            if (response.data.success) {\r\n                console.log(response.data);\r\n                setsideVideos(response.data.videos);\r\n            } else {\r\n                alert('비디오 가져오기 실패!');\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const renderSideVideo = sideVideos.map((video, index) => {\r\n        var minutes = Math.floor(video.duration / 60);\r\n        var seconds = Math.floor(video.duration - minutes * 60);\r\n        return (\r\n            <div\r\n                key={index}\r\n                style={{ display: 'flex', marginBottom: '1rem', padding: '0 2rem' }}\r\n            >\r\n                <div style={{ width: '40%', marginRight: '1rem' }}>\r\n                    <a href={`/video/${video._id}`}>\r\n                        <img\r\n                            style={{ width: '100%', height: '100%' }}\r\n                            src={`http://localhost:5000/${video.thumbnail}`}\r\n                            alt=\"thumbnail\"\r\n                        />\r\n                    </a>\r\n                </div>\r\n\r\n                <div style={{ width: '50%' }}>\r\n                    <a href={`/video/${video._id}`} style={{ color: 'gray' }}>\r\n                        <span style={{ fontSize: '1rem', color: 'black' }}>\r\n                            {video.title}\r\n                        </span>\r\n                        <br />\r\n                        <span>{video.writer.name}</span>\r\n                        <br />\r\n                        <span>{video.views} views</span>\r\n                        <br />\r\n                        <span>\r\n                            {minutes} : {seconds}\r\n                        </span>\r\n                        <br />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ marginTop: '3rem' }}>{renderSideVideo}</div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SideVideo","import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\n//import { response } from 'express';\r\n\r\n\r\nfunction Subscribe(props) {\r\n\r\n    const [SubscribeNumber, setSubscribeNumber] = useState(0)\r\n    const [Subscribed, setSubscribed] = useState(false)\r\n    useEffect(() => {\r\n        let variable = { userTo: props.userTo }\r\n        Axios.post('/api/subscribe/subscribeNumber', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSubscribeNumber(response.data.subscribeNumber)\r\n                } else {\r\n                    alert('구독자 수 정보 받아오기 실패')\r\n                }\r\n            })\r\n        let subscribedVariable = { userTo: props.userTo, userFrom: localStorage.getItem('userId') }\r\n\r\n        Axios.post('/api/subscribe/subscribed', subscribedVariable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSubscribed(response.data.subscribed)\r\n                } else {\r\n                    alert('정보 받아오지 못함')\r\n                }\r\n            })\r\n    }, [])\r\n    const onSubScribe = () => {\r\n\r\n        let subscribedVariable = {\r\n            userTo: props.userTo,\r\n            userFrom: props.userFrom\r\n        }\r\n\r\n        if (Subscribed) {\r\n            Axios.post('/api/subscribe/unSubscribe', subscribedVariable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setSubscribeNumber(SubscribeNumber - 1)\r\n                        setSubscribed(!Subscribed)\r\n\r\n                    } else {\r\n                        alert('!!구독 취소하는데 실패!!')\r\n                    }\r\n                })\r\n        } else {\r\n            Axios.post('/api/subscribe/subscribe', subscribedVariable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setSubscribeNumber(SubscribeNumber + 1)\r\n                        setSubscribed(!Subscribed)\r\n\r\n                    } else {\r\n                        alert('--구독하는데 실패--')\r\n                    }\r\n                })\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <button\r\n                style={{\r\n                    backgroundColor: `${Subscribed ? '#AAAAAA' : '#CC0000'}`, borderRadius: '4px',\r\n                    color: 'white', padding: '10px 16px',\r\n                    fontWeight: '500', fontSize: '1rem', textTransform: 'uppercase'\r\n                }}\r\n                onClick={onSubScribe}\r\n            >\r\n                {SubscribeNumber} {Subscribed ? 'Subscribed' : 'Subscribe'}\r\n            </button>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default Subscribe;","import React, { useEffect, useState } from \"react\";\r\nimport { Tooltip, Icon } from \"antd\";\r\nimport Axios from \"axios\";\r\n\r\nfunction LikeDislikes(props) {\r\n    const [Likes, setLikes] = useState(0);\r\n    const [Dislikes, setDislikes] = useState(0);\r\n\r\n    const [LikeAction, setLikeAction] = useState(null);\r\n    const [DisLikeAction, setDisLikeAction] = useState(null);\r\n\r\n    let variable = {};\r\n\r\n    if (props.video) {\r\n        variable = { videoId: props.videoId, userId: props.userId };\r\n\r\n    } else {\r\n        variable = { commentId: props.commentId, userId: props.userId };\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.post(\"/api/like/getLikes\", variable).then((res) => {\r\n            if (res.data.success) {\r\n                console.log(res.data);\r\n                setLikes(res.data.likes.length);\r\n\r\n                res.data.likes.map((like) => {\r\n                    if (like.userId === props.userId) {\r\n                        setLikeAction(\"liked\");\r\n                    }\r\n                });\r\n            } else {\r\n                alert(\"likes 에 정보를 가져오지 못했습니다.\");\r\n            }\r\n        });\r\n\r\n        Axios.post(\"/api/like/getDislikes\", variable).then((res) => {\r\n            if (res.data.success) {\r\n                console.log(res.data);\r\n                setDislikes(res.data.dislikes.length);\r\n\r\n                res.data.dislikes.map((dislike) => {\r\n                    if (dislike.userId === props.userId) {\r\n                        setDisLikeAction(\"disliked\");\r\n                    }\r\n                });\r\n            } else {\r\n                alert(\"dislikes 에 정보를 가져오지 못했습니다.\");\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const onLike = () => {\r\n        if (LikeAction === null) {\r\n            Axios.post(\"/api/like/upLike\", variable).then((res) => {\r\n                if (res.data.success) {\r\n                    setLikes(Likes + 1);\r\n                    setLikeAction(\"liked\");\r\n                    if (DisLikeAction !== null) {\r\n                        setDisLikeAction(null);\r\n                        setDislikes(Dislikes - 1);\r\n                    }\r\n                } else {\r\n                    alert(\"좋아요를 실패했습니다.\");\r\n                }\r\n            });\r\n        } else {\r\n            Axios.post(\"/api/like/unLike\", variable).then((res) => {\r\n                if (res.data.success) {\r\n                    setLikes(Likes - 1);\r\n                    setLikeAction(null);\r\n                } else {\r\n                    alert(\"좋아요를 내리지 못하였습니다.\");\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const onDislike = () => {\r\n        if (DisLikeAction !== null) {\r\n            Axios.post(\"/api/like/unDislike\", variable).then((res) => {\r\n                if (res.data.success) {\r\n                    setDislikes(Dislikes - 1);\r\n                    setDisLikeAction(null);\r\n                } else {\r\n                    alert(\"dislike을 지우지 못했습니다.\");\r\n                }\r\n            });\r\n        } else {\r\n            Axios.post(\"/api/like/upDislike\", variable).then((res) => {\r\n                if (res.data.success) {\r\n                    setDislikes(Dislikes + 1);\r\n                    setDisLikeAction(\"disliked\");\r\n                    if (LikeAction !== null) {\r\n                        setLikeAction(null);\r\n                        setLikes(Likes - 1);\r\n                    }\r\n                } else {\r\n                    alert(\"dislike을 지우지 못했습니다.\");\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <span key=\"comment-basic-like\">\r\n                <Tooltip title=\"Like\">\r\n                    <Icon\r\n                        type=\"like\"\r\n                        theme={LikeAction === \"liked\" ? \"filled\" : \"outlined\"}\r\n                        onClick={onLike}\r\n                    />\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: \"8px\", cursor: \"auto\" }}> {Likes}</span>\r\n            </span>\r\n            &nbsp;&nbsp;\r\n            <span key=\"comment-basic-dislike\">\r\n                <Tooltip title=\"Disike\">\r\n                    <Icon\r\n                        type=\"dislike\"\r\n                        theme={DisLikeAction === \"disliked\" ? \"filled\" : \"outlined\"}\r\n                        onClick={onDislike}\r\n                    />\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: \"8px\", cursor: \"auto\" }}> {Dislikes}</span>\r\n            </span>\r\n            &nbsp;&nbsp;\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LikeDislikes;","import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Comment, Avatar, Button, Input } from \"antd\";\r\nimport LikeDislikes from \"./LikeDislikes\";\r\n\r\n\r\nfunction SingleComment(props) {\r\n    const [OpenReply, setOpenReply] = useState(false);\r\n    const [CommentValue, setCommentValue] = useState(\"\");\r\n\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const onClickReplyOpen = () => {\r\n        setOpenReply(!OpenReply);\r\n    };\r\n    const onHandleChange = (e) => {\r\n        setCommentValue(e.currentTarget.value);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const variable = {\r\n            writer: user.userData._id,\r\n            postId: props.postId,\r\n            responseTo: props.comment._id,\r\n            content: CommentValue,\r\n        };\r\n\r\n        Axios.post(\"/api/comment/saveComment\", variable).then((res) => {\r\n            console.log(variable);\r\n            if (res.data.success) {\r\n                console.log(res.data.result);\r\n                setCommentValue(\"\");\r\n                setOpenReply(false);\r\n                props.refreshFunction(res.data.result);\r\n            } else {\r\n                alert(\"코맨트를 저장하지 못했습니다.\");\r\n            }\r\n        });\r\n    };\r\n\r\n    const actions = [\r\n        <LikeDislikes userId={localStorage.getItem('userId')} commentId={props.comment._id} />\r\n        , <span onClick={onClickReplyOpen} key=\"comment-basic-reply-to\">\r\n            {\" \"}\r\n            Reply to\r\n        </span>,\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <Comment\r\n                actions={actions}\r\n                author={props.comment.writer.name}\r\n                avatar={<Avatar src={props.comment.writer.image} alt />}\r\n                content={<p> {props.comment.content}</p>}\r\n            />\r\n            {OpenReply && (\r\n                <from style={{ display: \"flex\" }} onSubmit={onSubmit}>\r\n                    <textarea\r\n                        style={{ width: \"100%\", borderRadius: \"5px\" }}\r\n                        onChange={onHandleChange}\r\n                        value={CommentValue}\r\n                        placeholder=\"코멘트를 작성해 주세요\"\r\n                    />\r\n\r\n                    <br />\r\n                    <button style={{ width: \"20%\", height: \"52px\" }} onClick={onSubmit}>\r\n                        Submit\r\n                    </button>\r\n                </from>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SingleComment;","import React, { useEffect, useState } from \"react\";\r\nimport SingleComment from \"./SingleComment\";\r\n\r\nfunction ReplyComment(props) {\r\n    const [ChildCommentnumber, setChildCommentnumber] = useState(0);\r\n    const [OpenReplyComments, setOpenReplyComments] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let commentNumber = 0;\r\n\r\n        props.commentLists.map((comment) => {\r\n            if (comment.responseTo === props.parentCommentId) commentNumber++;\r\n        });\r\n        setChildCommentnumber(commentNumber);\r\n    }, [props.commentLists, props.parentCommentId]);\r\n\r\n    let renderReplyComment = (parentCommentId) =>\r\n        props.commentLists.map((comment, index) => (\r\n            <React.Fragment>\r\n                {comment.responseTo === parentCommentId && (\r\n                    <div style={{ width: \"80%\", marginLeft: \"40px\" }}>\r\n                        <SingleComment\r\n                            key={index}\r\n                            refreshFunction={props.refreshFunction}\r\n                            comment={comment}\r\n                            postId={props.postId}\r\n                        />\r\n                        <ReplyComment\r\n                            parentCommentId={comment._id}\r\n                            refreshFunction={props.refreshFunction}\r\n                            postId={props.postId}\r\n                            commentLists={props.commentLists}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </React.Fragment>\r\n        ));\r\n\r\n    const onHandleChange = () => {\r\n        setOpenReplyComments(!OpenReplyComments);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {ChildCommentnumber > 0 && (\r\n                <p\r\n                    style={{ fontSize: \"14px\", margin: 0, color: \"gray\" }}\r\n                    onClick={onHandleChange}\r\n                >\r\n                    View {ChildCommentnumber} more comment(s)\r\n                </p>\r\n            )}\r\n\r\n            {OpenReplyComments && renderReplyComment(props.parentCommentId)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReplyComment;","import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SingleComment from \"./SingleComment\";\r\nimport ReplyComment from \"./ReplyComment\";\r\n\r\n\r\nfunction Comment(props) {\r\n    const videoId = props.postId;\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const [Comment, setComment] = useState(\"\");\r\n\r\n    const handleClick = (e) => {\r\n        setComment(e.currentTarget.value);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const variable = {\r\n            content: Comment,\r\n            writer: user.userData._id,\r\n            postId: videoId,\r\n        };\r\n\r\n        Axios.post(\"/api/comment/saveComment\", variable).then((res) => {\r\n            console.log(variable);\r\n            if (res.data.success) {\r\n                console.log(res.data.result);\r\n                setComment(\"\");\r\n\r\n                props.refreshFunction(res.data.result);\r\n            } else {\r\n                alert(\"코맨트를 저장하지 못했습니다.\");\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <p> Replies</p>\r\n            <hr />\r\n\r\n            {/* Comment Lists */}\r\n\r\n            {props.commentLists &&\r\n                props.commentLists.map(\r\n                    (comment, index) =>\r\n                        !comment.responseTo && (\r\n                            <React.Fragment>\r\n                                <SingleComment\r\n                                    key={index}\r\n                                    refreshFunction={props.refreshFunction}\r\n                                    comment={comment}\r\n                                    postId={videoId}\r\n                                />\r\n                                <ReplyComment\r\n                                    postId={videoId}\r\n                                    parentCommentId={comment._id}\r\n                                    commentLists={props.commentLists}\r\n                                    refreshFunction={props.refreshFunction}\r\n                                />\r\n                            </React.Fragment>\r\n                        )\r\n                )}\r\n            {/* Root Comment Form */}\r\n\r\n            <from style={{ display: \"flex\" }} onSubmit={onSubmit}>\r\n                <textarea\r\n                    style={{ width: \"100%\", borderRadius: \"5px\" }}\r\n                    onChange={handleClick}\r\n                    value={Comment}\r\n                    placeholder=\"코멘트를 작성해 주세요\"\r\n                />\r\n\r\n                <br />\r\n                <button style={{ width: \"20%\", height: \"52px\" }} onClick={onSubmit}>\r\n                    Submit\r\n                </button>\r\n            </from>\r\n        </div>\r\n    );\r\n}\r\nexport default Comment;","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Avatar, List } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport SideVideo from \"./Sections/SideVideo\";\r\nimport Subscribe from \"./Sections/Subscribe\";\r\nimport Comment from \"./Sections/Comment\";\r\nimport LikeDislikes from \"./Sections/LikeDislikes\";\r\n\r\nfunction VideoDetailPage(props) {\r\n    const videoId = props.match.params.videoId;\r\n    //랜딩페이지에서 주소창뒤에 videoId를 보내주고있기때문에가능\r\n    const variable = { videoId: videoId };\r\n    const [VideoDetail, setVideoDetail] = useState([]);\r\n    const [CommentLists, setCommentLists] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.post(\"/api/video/getVideoDetail\", variable).then((response) => {\r\n            if (response.data.success) {\r\n                console.log(response.data);\r\n                setVideoDetail(response.data.videoDetail);\r\n            } else {\r\n                alert(\"비디오 정보를 가져오길 실패했습니다.\");\r\n            }\r\n        });\r\n        Axios.post(\"/api/comment/getComment\", variable).then((res) => {\r\n            if (res.data.success) {\r\n                setCommentLists(res.data.comments);\r\n                console.log(res.data.comments);\r\n            } else {\r\n                alert(\"코멘트 정보를 가져오는 것을 실패 하였습니다.\");\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const refreshFunction = (newComment) => {\r\n        setCommentLists(CommentLists.concat(newComment));\r\n    };\r\n\r\n    if (VideoDetail.writer) {\r\n        const subscribeButton = VideoDetail.writer._id !==\r\n            localStorage.getItem(\"userId\") && (\r\n                <Subscribe\r\n                    userTo={VideoDetail.writer._id}\r\n                    userFrom={localStorage.getItem(\"userId\")}\r\n                />\r\n            );\r\n        return (\r\n            <Row gutter={(16, 16)}>\r\n                <Col lg={18} xs={24}>\r\n                    <div style={{ width: \"100%\", padding: \"3rem 4rem\" }}>\r\n                        <video\r\n                            style={{ width: \"100%\" }}\r\n                            src={`http://localhost:5000/${VideoDetail.filePath}`}\r\n                            controls\r\n                        />\r\n                        <List.Item\r\n                            actions={[\r\n                                <LikeDislikes\r\n                                    video\r\n                                    userId={localStorage.getItem(\"userId\")}\r\n                                    videoId={videoId}\r\n                                />,\r\n                                subscribeButton,\r\n                            ]}\r\n                        >\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src={VideoDetail.writer.image} />}\r\n                                title={VideoDetail.writer.name}\r\n                                description={VideoDetail.description}\r\n                            />\r\n                        </List.Item>\r\n                        {/* comment*/}\r\n                        <Comment\r\n                            refreshFunction={refreshFunction}\r\n                            commentLists={CommentLists}\r\n                            postId={videoId}\r\n                        />\r\n                    </div>\r\n                </Col>\r\n\r\n                <Col lg={6} xs={24}>\r\n                    <SideVideo />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else {\r\n        return <div>...loding</div>;\r\n    }\r\n}\r\n\r\nexport default VideoDetailPage;","import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport moment from 'moment';\r\nimport { Typography, Row, Col, Card, Avatar } from 'antd';\r\n\r\n\r\nconst { Title } = Typography;\r\nconst { Meta } = Card;\r\n\r\nfunction SubscriptionPage() {\r\n\r\n    const [Videos, setVideos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const subscriptionVariables = {\r\n            userFrom: localStorage.getItem('userId'),\r\n        };\r\n        Axios.post('/api/video/getSubscriptionVideos', subscriptionVariables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log(response.data.videos);\r\n                    setVideos(response.data.videos);\r\n                } else {\r\n                    alert('구독자 비디오 가져오기 실패!');\r\n                }\r\n            }\r\n            );\r\n    }, []);\r\n\r\n\r\n    const renderCards = Videos.map((video, index) => {\r\n        var minutes = Math.floor(video.duration / 60);\r\n        var seconds = Math.floor(video.duration - minutes * 60);\r\n        return (\r\n            <Col lg={6} md={8} xs={24} key={index}>\r\n\r\n                <div style={{ position: 'relative' }}>\r\n                    <a href={`/video/${video._id}`}>\r\n                        <img\r\n                            style={{ width: '100%' }}\r\n                            alt=\"thumbnail\"\r\n                            src={`http://localhost:5000/${video.thumbnail}`}\r\n                        />\r\n                        <div\r\n                            className=\"duration\"\r\n                            style={{\r\n                                bottom: 0,\r\n                                right: 0,\r\n                                position: 'absolute',\r\n                                margin: '4px',\r\n                                color: '#fff',\r\n                                backgroundColor: 'rgba(17, 17, 17, 0.8)',\r\n                                opacity: 0.8,\r\n                                padding: '2px 4px',\r\n                                borderRadius: '2px',\r\n                                letterSpacing: '0.5px',\r\n                                fontSize: '12px',\r\n                                fontWeight: '500',\r\n                                lineHeight: '12px',\r\n                            }}\r\n                        >\r\n                            <span>\r\n                                {minutes} : {seconds}\r\n                            </span>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                <br />\r\n                <Meta\r\n                    //Avatar 업로드 사용자 이미지\r\n                    avatar={<Avatar src={video.writer.image} />}\r\n                    title={video.title}\r\n                />\r\n                <span>{video.writer.name} </span>\r\n                <br />\r\n                <span style={{ marginLeft: '3rem' }}> {video.views}</span>-\r\n                <span> {moment(video.createdAt).format('MMM Do YY')} </span>\r\n            </Col>\r\n        );\r\n    });\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <Title level={2}>Subscribed Videos</Title>\r\n            <hr />\r\n            <Row gutter={16}>{renderCards}</Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubscriptionPage;\r\n","import React from \"react\";\r\n\r\nexport default function PlacesList({ places, onPlaceClick, onPlaceRemove }) {\r\n    return (\r\n        <section className=\"places-list\">\r\n            <h2>Places I want to visit</h2>\r\n            <ul>\r\n                {places.map((place) => (\r\n                    <li key={place.id}>\r\n                        <span onClick={() => onPlaceClick(place)}>{place.name}</span>{\" \"}\r\n                        <button onClick={() => onPlaceRemove(place)}>×</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n","import GeocoderService from \"@mapbox/mapbox-sdk/services/geocoding\";\r\n\r\nexport const accessToken =\r\n    \"pk.eyJ1IjoiZGllZ28tc3BpY2VkIiwiYSI6ImNrcmV5bnlzZzVyZ2ozMW82dDgzODdpOGwifQ.uoWpG6mE9KPcM0Q1pIY4Rg\";\r\n\r\nexport const geocoder = GeocoderService({\r\n    accessToken\r\n});\r\n","import React, { useState } from \"react\";\r\n\r\nimport { geocoder } from \"./mapbox\";\r\n\r\nexport default function AddPlaceForm({ onSubmit }) {\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [currentSuggestion, setCurrentSuggestion] = useState({});\r\n    const [text, setText] = useState(\"\");\r\n\r\n    function _onSubmit(event) {\r\n        event.preventDefault();\r\n        if (!currentSuggestion.geometry) {\r\n            return;\r\n        }\r\n        onSubmit({\r\n            name: currentSuggestion.place_name,\r\n            lngLat: currentSuggestion.geometry.coordinates\r\n        });\r\n        setCurrentSuggestion({});\r\n        setText(\"\");\r\n    }\r\n\r\n    async function onInput(event) {\r\n        const query = event.target.value;\r\n        if (query.length < 3) {\r\n            return;\r\n        }\r\n        const response = await geocoder.forwardGeocode({ query, limit: 5 }).send();\r\n        setSuggestions(response.body.features);\r\n    }\r\n\r\n    function onSuggestionClick(suggestion) {\r\n        setCurrentSuggestion(suggestion);\r\n        setText(suggestion.place_name);\r\n        setSuggestions([]);\r\n    }\r\n\r\n    function renderSuggestions() {\r\n        return (\r\n            <ul>\r\n                {suggestions.map((x) => (\r\n                    <li key={x.place_name} onClick={() => onSuggestionClick(x)}>\r\n                        {x.place_name}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n    function onChange(event) {\r\n        setText(event.target.value);\r\n    }\r\n    return (\r\n        <section className=\"add-place\">\r\n            <h2>Add new place</h2>\r\n            <form onSubmit={_onSubmit} autoComplete=\"off\">\r\n                <input\r\n                    type=\"text\"\r\n                    required\r\n                    onInput={onInput}\r\n                    value={text}\r\n                    onChange={onChange}\r\n                    placeholder=\"Type the place you want to go...\"\r\n                />\r\n                <button type=\"submit\">Add Place</button>\r\n                {renderSuggestions()}\r\n            </form>\r\n        </section>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactMapGL, {\r\n    Marker,\r\n    NavigationControl,\r\n    ScaleControl\r\n} from \"react-map-gl\";\r\n\r\nimport { accessToken } from \"./mapbox\";\r\n\r\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\r\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\r\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\r\n\r\nconst ICON_SIZE = 20;\r\n\r\nconst navStyle = {\r\n    top: \"1rem\",\r\n    left: \"1rem\"\r\n};\r\n\r\nconst scaleControlStyle = {\r\n    bottom: \"3rem\",\r\n    left: \"1rem\"\r\n};\r\n\r\nexport default function Map({ places, center }) {\r\n    const [viewport, setViewport] = useState({\r\n        latitude: center[1],\r\n        longitude: center[0],\r\n        zoom: 4\r\n    });\r\n\r\n    useEffect(() => {\r\n        setViewport({\r\n            latitude: center[1],\r\n            longitude: center[0],\r\n            zoom: 4\r\n        });\r\n    }, [center]);\r\n\r\n    return (\r\n        <ReactMapGL\r\n            {...viewport}\r\n            width=\"calc(100% - 400px)\"\r\n            height=\"100%\"\r\n            className=\"map\"\r\n            mapboxApiAccessToken={accessToken}\r\n            onViewportChange={(viewport) => setViewport(viewport)}\r\n        >\r\n            {places.map(({ id, name, lngLat }) => (\r\n                <Marker key={id} longitude={lngLat[0]} latitude={lngLat[1]}>\r\n                    <svg\r\n                        height={ICON_SIZE}\r\n                        viewBox=\"0 0 24 24\"\r\n                        style={{\r\n                            cursor: \"pointer\",\r\n                            fill: \"#d00\",\r\n                            stroke: \"none\",\r\n                            transform: `translate(${-ICON_SIZE / 2}px,${-ICON_SIZE}px)`\r\n                        }}\r\n                    >\r\n                        <path d={ICON} />\r\n                    </svg>\r\n                </Marker>\r\n            ))}\r\n            <NavigationControl style={navStyle} />\r\n            <ScaleControl style={scaleControlStyle} />\r\n        </ReactMapGL>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PlacesList from \"./PlacesList\";\r\nimport AddPlaceForm from \"./AddPlaceForm\";\r\nimport Map from \"./Map\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst initialPlaces = [\r\n    {\r\n        id: 1,\r\n        name: \"Berlin, Germany\",\r\n        lngLat: [13.383309, 52.516806]\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Roma, Rome, Italy\",\r\n        lngLat: [12.485855, 41.909468]\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Barcelona, Barcelona, Spain\",\r\n        lngLat: [2.177657, 41.401487]\r\n    }\r\n];\r\n\r\nasync function getPlaces() {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => resolve(initialPlaces), 500);\r\n    });\r\n}\r\n\r\nexport default function App() {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [places, setPlaces] = useState([]);\r\n    const [center, setCenter] = useState([]);\r\n\r\n    // simulate server data loading\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        (async () => {\r\n            const places = await getPlaces();\r\n            setPlaces(places);\r\n            setCenter(places[1].lngLat);\r\n            setLoading(false);\r\n        })();\r\n    }, []);\r\n\r\n    function onPlaceClick(place) {\r\n        setCenter(place.lngLat);\r\n    }\r\n\r\n    function onPlaceRemove(place) {\r\n        setPlaces(places.filter((x) => x.id !== place.id));\r\n    }\r\n\r\n    function onSubmit(place) {\r\n        // find a strategy to avoid duplicates\r\n        if (places.find((x) => x.name === place.name)) {\r\n            alert(\"Place already existing\");\r\n            return;\r\n        }\r\n        const newPlace = {\r\n            ...place,\r\n            id: places[places.length - 1].id + 1\r\n        };\r\n        setPlaces([...places, newPlace]);\r\n        setCenter(place.lngLat);\r\n    }\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"sidebar\">\r\n                {isLoading ? (\r\n                    <p>Loading...</p>\r\n                ) : (\r\n                    <>\r\n                        <PlacesList\r\n                            places={places}\r\n                            onPlaceClick={onPlaceClick}\r\n                            onPlaceRemove={onPlaceRemove}\r\n                        />\r\n                        <AddPlaceForm onSubmit={onSubmit} />{\" \"}\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Map center={center} places={places} />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\";\nimport VideoUploadPage from \"./views/VideoUploadPage/VideoUploadPage\";\nimport VideoDetailPage from \"./views/VideoDetailPage/VideoDetailPage\";\nimport SubscriptionPage from \"./views/SubscriptionPage/SubscriptionPage\";\n\nimport MapApp from \"./MapApp\";\n\nimport \"./styles.css\";\nimport { date } from \"yup\";\n\n//null   Anyone Can go inside\n//true   only logged in user can go inside\n//false  logged in user can't go inside\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <NavBar />\n      <div style={{ paddingTop: \"69px\", minHeight: \"calc(100vh - 80px)\" }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route\n            exact\n            path=\"/video/upload\"\n            component={Auth(VideoUploadPage, true)}\n          />\n          <Route\n            exact\n            path=\"/video/:videoId\"\n            component={Auth(VideoDetailPage, null)}\n          />\n          <Route\n            exact\n            path=\"/subscription\"\n            component={Auth(SubscriptionPage, null)}\n          />\n          <Route exact path=\"/MapApp\" component={Auth(MapApp, null)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import \"react-app-polyfill/ie9\";\nimport \"react-app-polyfill/ie11\";\nimport \"core-js\";\n\nimport React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from \"./_reducers\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\n\n//import App from './components/MapApp';\n\nconst createStoreWithMiddleware = applyMiddleware(\n  promiseMiddleware,\n  ReduxThunk\n)(createStore);\n\nReactDOM.render(\n  <Provider\n    store={createStoreWithMiddleware(\n      Reducer,\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )}\n  >\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}